definitions:
  controllers.LoginRequest:
    properties:
      email:
        example: user@example.com
        type: string
      password:
        example: strongpassword
        type: string
    type: object
  controllers.LoginResponse:
    properties:
      token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
    type: object
  models.Album:
    properties:
      artist:
        description: Nazwa wykonawcy
        type: string
      cover_url:
        description: URL do okładki albumu
        type: string
      created_at:
        description: Data utworzenia wpisu
        type: string
      description:
        description: Opis albumu
        type: string
      genre:
        description: Gatunek muzyczny
        type: string
      id:
        description: ID albumu
        type: string
      price:
        description: Cena albumu
        type: number
      quantity:
        description: Ilość dostępnych sztuk
        type: integer
      release_date:
        description: Data wydania
        type: string
      title:
        description: Tytuł albumu
        type: string
      tracks:
        description: Lista utworów
        items:
          type: string
        type: array
      updated_at:
        description: Data ostatniej aktualizacji
        type: string
    type: object
  models.ErrorResponse:
    properties:
      error:
        description: Komunikat błędu
        type: string
    type: object
  models.Order:
    properties:
      created_at:
        description: Data utworzenia zamówienia
        type: string
      id:
        description: ID zamówienia (unikalny identyfikator)
        type: string
      items:
        description: Lista pozycji w zamówieniu
        items:
          $ref: '#/definitions/models.OrderItem'
        type: array
      shipping:
        allOf:
        - $ref: '#/definitions/models.ShippingDetails'
        description: Dane do wysyłki
      status:
        description: Status zamówienia (pending, processing, shipped, completed, cancelled)
        type: string
      total:
        description: Całkowita wartość zamówienia
        type: number
      updated_at:
        description: Data ostatniej aktualizacji zamówienia
        type: string
      user_id:
        description: ID użytkownika, który złożył zamówienie
        type: string
    type: object
  models.OrderItem:
    properties:
      album_id:
        description: ID albumu w zamówieniu
        type: string
      price:
        description: Cena jednostkowa albumu w momencie zamówienia
        type: number
      quantity:
        description: Ilość sztuk albumu
        type: integer
    type: object
  models.Review:
    properties:
      album_id:
        description: ID albumu, którego dotyczy recenzja
        type: string
      comment:
        description: Komentarz do recenzji
        type: string
      created_at:
        description: Data utworzenia recenzji
        type: string
      id:
        description: ID recenzji (unikalny identyfikator)
        type: string
      rating:
        description: Ocena albumu (np. od 1 do 5)
        type: integer
      user_id:
        description: ID użytkownika, który dodał recenzję
        type: string
    type: object
  models.ShippingDetails:
    properties:
      address:
        description: Adres dostawy (np. ulica, nr domu/mieszkania)
        type: string
      city:
        description: Miasto dostawy
        type: string
      country:
        description: Kraj dostawy
        type: string
      phone_number:
        description: Numer telefonu kontaktowego
        type: string
      postal_code:
        description: Kod pocztowy dostawy
        type: string
    type: object
  models.SuccessResponse:
    properties:
      message:
        description: Wiadomość o sukcesie
        type: string
    type: object
  models.User:
    properties:
      created_at:
        description: Data utworzenia użytkownika
        type: string
      email:
        description: Adres email użytkownika
        type: string
      first_name:
        description: Imię użytkownika
        type: string
      id:
        description: ID użytkownika (unikalny identyfikator)
        type: string
      is_active:
        description: Czy konto jest aktywne
        type: boolean
      last_name:
        description: Nazwisko użytkownika
        type: string
      phoneNumber:
        description: Numer telefonu
        type: string
      role:
        description: Rola użytkownika (np. "employee", "customer", "admin")
        type: string
      shipping_details:
        allOf:
        - $ref: '#/definitions/models.ShippingDetails'
        description: Dane adresowe
      updated_at:
        description: Data ostatniej aktualizacji
        type: string
    type: object
host: localhost:25565
info:
  contact: {}
  description: API do zarządzania sklepem muzycznym
  title: Music Store API
  version: "1.0"
paths:
  /albums:
    get:
      consumes:
      - application/json
      description: Zwraca wszystkie albumy w sklepie z opcjonalnym filtrowaniem, sortowaniem
        i paginacją
      parameters:
      - description: Numer strony (domyślnie 1)
        in: query
        name: page
        type: integer
      - description: Liczba wyników na stronę (domyślnie 10)
        in: query
        name: limit
        type: integer
      - description: Filtruj po wykonawcy (częściowa zgodność, bez wielkości liter)
        in: query
        name: artist
        type: string
      - description: Filtruj po gatunku muzycznym (częściowa zgodność, bez wielkości
          liter)
        in: query
        name: genre
        type: string
      - description: Sortowanie po polach (np. price,-title)
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'Struktura danych zawiera: page, limit, total i data (lista
            albumów)'
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Pobierz listę albumów
      tags:
      - Albums
    post:
      consumes:
      - application/json
      description: Dodaje album do bazy danych
      parameters:
      - description: Album do dodania
        in: body
        name: album
        required: true
        schema:
          $ref: '#/definitions/models.Album'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Album'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Dodaj nowy album
      tags:
      - Albums
  /albums/{id}:
    delete:
      consumes:
      - application/json
      description: Usuwa album na podstawie ID
      parameters:
      - description: ID albumu
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Usuń album
      tags:
      - Albums
    get:
      consumes:
      - application/json
      description: Zwraca szczegóły albumu na podstawie ID
      parameters:
      - description: ID albumu
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Album'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Pobierz album po ID
      tags:
      - Albums
    patch:
      consumes:
      - application/json
      description: Aktualizuje dane albumu na podstawie ID
      parameters:
      - description: ID albumu
        in: path
        name: id
        required: true
        type: string
      - description: Zaktualizowane dane albumu
        in: body
        name: album
        required: true
        schema:
          $ref: '#/definitions/models.Album'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Zaktualizuj album
      tags:
      - Albums
  /albums/bulk:
    post:
      consumes:
      - application/json
      description: Dodaje wiele albumów do bazy danych w jednym żądaniu
      parameters:
      - description: Lista albumów do dodania
        in: body
        name: albums
        required: true
        schema:
          items:
            $ref: '#/definitions/models.Album'
          type: array
      produces:
      - application/json
      responses:
        "201":
          description: Informacja o dodanych albumach i ich liczbie
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Dodaj wiele albumów naraz
      tags:
      - Albums
  /login:
    post:
      consumes:
      - application/json
      description: Zwraca token JWT po poprawnym zalogowaniu
      parameters:
      - description: Dane logowania
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/controllers.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.LoginResponse'
        "400":
          description: Niepoprawne dane
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Błędne dane logowania
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Logowanie użytkownika
      tags:
      - Auth
  /orders:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Order'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Pobierz wszystkie zamówienia
      tags:
      - Orders
    post:
      consumes:
      - application/json
      parameters:
      - description: Nowe zamówienie
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/models.Order'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Order'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Utwórz nowe zamówienie
      tags:
      - Orders
  /orders/{id}:
    delete:
      parameters:
      - description: ID zamówienia
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Usuń zamówienie
      tags:
      - Orders
    get:
      parameters:
      - description: ID zamówienia
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Order'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Pobierz zamówienie po ID
      tags:
      - Orders
    put:
      consumes:
      - application/json
      parameters:
      - description: ID zamówienia
        in: path
        name: id
        required: true
        type: string
      - description: Dane zamówienia do aktualizacji
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/models.Order'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Zaktualizuj zamówienie (np. status)
      tags:
      - Orders
  /orders/{id}/shipping:
    put:
      consumes:
      - application/json
      parameters:
      - description: ID zamówienia
        in: path
        name: id
        required: true
        type: string
      - description: Nowe dane wysyłki
        in: body
        name: shipping
        required: true
        schema:
          $ref: '#/definitions/models.ShippingDetails'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Zaktualizuj dane wysyłki zamówienia
      tags:
      - Orders
  /orders/{id}/status:
    patch:
      consumes:
      - application/json
      parameters:
      - description: ID zamówienia
        in: path
        name: id
        required: true
        type: string
      - description: Nowy status zamówienia
        in: body
        name: status
        required: true
        schema:
          additionalProperties:
            type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Zaktualizuj status zamówienia
      tags:
      - Orders
  /orders/user/{userID}:
    get:
      parameters:
      - description: ID użytkownika
        in: path
        name: userID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Order'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Pobierz zamówienia użytkownika
      tags:
      - Orders
  /reviews:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Review'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Pobierz wszystkie recenzje
      tags:
      - Reviews
    post:
      consumes:
      - application/json
      parameters:
      - description: Nowa recenzja
        in: body
        name: review
        required: true
        schema:
          $ref: '#/definitions/models.Review'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Review'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Dodaj nową recenzję
      tags:
      - Reviews
  /reviews/{id}:
    delete:
      parameters:
      - description: ID recenzji
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Usuń recenzję
      tags:
      - Reviews
    get:
      parameters:
      - description: ID recenzji
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Review'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Pobierz recenzję po ID
      tags:
      - Reviews
    put:
      consumes:
      - application/json
      parameters:
      - description: ID recenzji
        in: path
        name: id
        required: true
        type: string
      - description: Dane recenzji do aktualizacji
        in: body
        name: review
        required: true
        schema:
          $ref: '#/definitions/models.Review'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Zaktualizuj recenzję
      tags:
      - Reviews
  /reviews/album/{albumID}:
    get:
      parameters:
      - description: ID albumu
        in: path
        name: albumID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Review'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Pobierz recenzje dla konkretnego albumu
      tags:
      - Reviews
  /reviews/user/{userID}:
    get:
      parameters:
      - description: ID użytkownika
        in: path
        name: userID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Review'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Pobierz recenzje użytkownika
      tags:
      - Reviews
  /users:
    get:
      consumes:
      - application/json
      description: Zwraca wszystkich użytkowników w systemie
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
      security:
      - BearerAuth: []
      summary: Pobierz listę użytkowników
      tags:
      - Users
    post:
      consumes:
      - application/json
      description: Tworzy nowego użytkownika w bazie
      parameters:
      - description: Użytkownik do dodania
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Dodaj nowego użytkownika
      tags:
      - Users
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Usuwa użytkownika na podstawie ID
      parameters:
      - description: ID użytkownika
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Usuń użytkownika
      tags:
      - Users
    get:
      consumes:
      - application/json
      description: Zwraca szczegóły użytkownika na podstawie ID
      parameters:
      - description: ID użytkownika
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Pobierz użytkownika po ID
      tags:
      - Users
    patch:
      consumes:
      - application/json
      description: Aktualizuje dane użytkownika na podstawie ID
      parameters:
      - description: ID użytkownika
        in: path
        name: id
        required: true
        type: string
      - description: Zaktualizowane dane użytkownika
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Aktualizuj użytkownika
      tags:
      - Users
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
